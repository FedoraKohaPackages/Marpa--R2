# Copyright 2014 Jeffrey Kegler
# This file is part of Marpa::R2.  Marpa::R2 is free software: you can
# redistribute it and/or modify it under the terms of the GNU Lesser
# General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# Marpa::R2 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser
# General Public License along with Marpa::R2.  If not, see
# http://www.gnu.org/licenses/.

=head1 NAME

Marpa::R2::Semantics::Phases - Phases of SLIF parse evaluation

=head1 Overview of the semantic phases

Most users will find that the order in which
the SLIF executes its semantics "just works",
and they will not need to learn the details,
or to use the advanced features, described in this document.

This document describes the order of execution
of the semantics in detail.
These details can matter in some applications,
for example, those which exploit side effects.
And some readers may also find this background material
to be helpful.

=head1  Parse trees and parse series

Because Marpa allows ambiguous parsing,
each parse can produce a B<parse series> --
a series of zero or more parse trees,
where each tree its own parse result.
In most applications, there is only
one parse series.
The call to the
L<SLIF recognizer's C<read()>
method|Marpa::R2::Scanless::R/"read()">
is the
start of the first parse series.

The first parse series continues until there is
a call to the
L<C<series_restart()>
method|Marpa::R2::Scanless::R/"series_restart()">
or until the recognizer is destroyed.
Each call of the C<series_restart()> method
starts a new parse series.
An application is usually interested in only one
parse series.

The processing of each parse series takes place
in two phases, the second of which is optional.
The Reading Phase is the first phase,
and starts when then parse series starts.
The Evaluation Phase is optional.
If it occurs,
it comes after the Reading Phase.

=head1 The Reading Phase

The Reading Phase begins with a call to either
the SLIF's C<read()> method
or the SLIF's C<series_restart()> method.
During the reading phase, the application can
call the SLIF's C<resume()> method.
The Reading Phase ends just before the first call
of the SLIF's C<value()> method.

=head1 The Evaluation Phase

The Evaluation Phase begins with a recognizer's first call
to the SLIF's C<value()> method.
It ends when the recognizer is destroyed,
or when
the SLIF's C<series_restart()> method
is called for that recognizer.
The Evaluation Phase is divided into subphases,
as described
L<below|"The evaluation subphases">.

During the Evaluation Phase,
the C<value()> method may be called multiple times,
each time producing a new parse tree.
The C<resume> method should B<not> be called
during the evaluation phase -- the result of doing
so is not defined.

=head1 The evaluation subphases

During the evaluation phase of a parse series, we have:

=over

=item * A Parse Series Setup Subphase, which occurs during
the first call of the SLIF recognizer's C<value()> method
for that series.
It is followed by

=item * the processing of zero or more parse trees.

=back

While processing a parse tree, we have:

=over

=item * A Parse Tree Setup Subphase, which occurs during
the call of the recognizer's C<value()> method
for that parse tree.
It is followed by

=item * a Parse Tree Traveral Subphase.

=back

B<Node Evaluation Time>
is the Tree Traversal Subphase, as seen from the point of view of
each rule node.  It is not a separate phase.

=head1 Parse Series Setup Subphase

During the Parse Series Setup Subphase
all action names are resolved to
actions --
Perl scalars
or rule evaluation closures.
The rule evaluation closures are not called in the Parse Series Setup Subphase.
They will be called later,
in the Parse Tree Traversal Subphase.
Also, during the Parse Series Setup Subphase,
the logic which
ranks parse trees is executed.

=head1 Parse Tree Setup Subphase

In the Parse Tree Setup Subphase,
the per-parse argument is created.
If a per-parse constructor was found,
it is run at this point, and the per-parse argument is
its return value.
Exactly one Parse Tree Setup Subphase occurs
for each parse tree.

=head1 Parse Tree Traversal Subphase

During the Parse Tree Traversal Subphase,
the rule evaluation closures are called.
Node Evaluation Time is the Parse Tree Traversal Subphase,
as seen from the point of view of the individual nodes of the parse tree.

=head1 Copyright and License

=for Marpa::R2::Display
ignore: 1

  Copyright 2014 Jeffrey Kegler
  This file is part of Marpa::R2.  Marpa::R2 is free software: you can
  redistribute it and/or modify it under the terms of the GNU Lesser
  General Public License as published by the Free Software Foundation,
  either version 3 of the License, or (at your option) any later version.

  Marpa::R2 is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser
  General Public License along with Marpa::R2.  If not, see
  http://www.gnu.org/licenses/.

=for Marpa::R2::Display::End

=cut

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 100
# End:
# vim: expandtab shiftwidth=4:
